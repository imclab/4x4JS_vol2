extend layout

block content

	#rendererContainer

	x-deck(transition-type="fade")
		
		x-card.opaque
			div
				h1 Hello DevFest!
				p Com anem?
	
		x-card.opaque
			h1 Four to the floor JavaScript, vol 2
	
		x-card.opaque
			div
				h1 Soledad Penadés
				p Apps Engineer en Mozilla (de día)

		x-card.opaque
			div
				h1 @supersole
				p Noise maker (de noche)
		


		x-card.opaque
			h1 Lo que veremos

		x-card.opaque
			h1 1. Un poco de contexto

		x-card.opaque
			h1 2. Lo que he hecho

		x-card.opaque
			h1 ... y después ...



		x-card.opaque
			h1 3. Váis a flipar

		x-card.opaque
			h1 ...o vuestros oídos van a flipar...

		x-card.opaque
			h1 ¿"Brace, brace"?

		x-card.opaque
			h1 ¡Huid!


		
		x-card.opaque
			h1 Me <em>chifla</em> la música

		x-card.opaque.cover(data-background="img/parchis_lp.jpg")
			h1 El primer disco que me regalaron

		x-card.opaque
			h1 No podía dejar de escucharlo

		x-card.opaque
			h1 Mi primer desafío



		x-card.opaque
			h1 Los 80 eran <em>buenos tiempos</em>

		x-card.opaque
			h1 Electropop horterilla

		x-card.opaque
			h1 Videojuegos de 8 bits

		x-card.opaque
			h1 Teclados CASIO


		x-card.opaque.cover(data-background="img/casiopt100.jpg")
			h1 El mío:<br/>CASIO PT-100

		x-card.opaque.light.cover(data-background="img/casiopt100_controls.jpg")
			h1 Pocas opciones de configuración

		x-card.opaque
			h1 Exportar === grabar en una cinta

		x-card.opaque
			h1 Yo era feliz ☺


		x-card.opaque
			h1 Y llegaron los 90

		x-card.opaque.light.cover(data-background="img/multimedia.png")
			h1 OMG MULTIMEDIA!

		x-card.opaque.cover(data-background="img/it.png")
			h1 ¡Trackers!

		x-card.opaque
			h1 Compuse montones de música


		x-card.opaque.cover(data-background="img/ppg06_01.jpg")
			h1 Demoscene

		x-card.opaque.cover(data-background="img/mmt2005.jpg")
			h1 VJing
			p.credits photo by <a href="http://www.flickr.com/photos/_sml/88551897/in/photolist-8PRoR-8PRoT-8PRpc-8Q3UX-8Q3Vj-8Q3Vp-8Q3VN-91Sbe-a2hjd-a2hjA-a2hmu-a2hn1-a2hoM-a2hp6-bcnDC-bcnJU-bcnLn-bcnLY-bcnMN-bcnUB-bcnV2-bcnVV-bcnWB-bco4P-bco5o-bco6b-bcoaH-bcoi8-bcokx-bcomw-cimPN-cimQ6-cimQh-cimQy-cimQG-cimQR-cimRq-cimRy-cimRT-cimS4-cimS6-cimSg-cimSk-cimSn-cimSp-cimSu-cimSw-cimSD-cimSJ-cimSM-cimSQ/">David Domingo</a>

		x-card.opaque.cover(data-background="img/offf05.jpg")
			h1 Actuaciones
			p.credits photo by <a href="http://www.flickr.com/photos/_sml/88590658/in/pool-37721502@N00/">David Domingo</a>

		x-card.opaque
			h1 Es difícil coordinarse con la gente



		x-card.opaque.cover(data-background="img/sorollet.jpg")
			h1 Síntesis de audio

		x-card.opaque
			h1 C/C++

		x-card.opaque
			h1 VSTi

		x-card.opaque
			h1 Es difícil de distribuir ☹
		


		x-card.cover(data-background="img/ihearthtml5.png")
			h1 OMG<br />JavaScript + HTML5!

		x-card.opaque
			h1 ¡Web Audio!

		x-card.opaque
			h1 ¡WebGL!

		x-card.opaque
			h1 ¡node.js!



		x-card.opaque
			h1 La mujer orquesta (con JS)

		x-card.opaque
			h1 Generar audio y vídeo

		x-card.opaque
			h1 Controlador hardware

		x-card.opaque
			h1 Todo unido con node.js
		


		x-card.opaque
			h1 QuNeo hardware controller

		x-card.opaque
			h1 "for hackers"

		x-card.opaque
			h1 Botones sensibles a la presión, ¡con LEDs!

		x-card.opaque
			h1 Pequeñajo



		x-card.opaque
			h1 USB &harr; MIDI &harr; OSC &harr; node.js

		x-card.opaque
			div
				h1 QuNeo &harr; node.js:<br />OSCBridge
				p OSC = Open Sound Control
				p Usa UDP

		x-card.opaque.cover(data-background="img/quneo.png")
		
		x-card.opaque
			div
				h1 UDP &harr; <code>node-osc</code>
				p <code>var osc = require('node-osc');</code>
				p <code>new osc.Server(8888, '0.0.0.0');</code>
				p <code>new osc.Client('0.0.0.0', 9999);</code>



		x-card.opaque
			div
				h1 Touch events
				p <code>oscServer.on('message', <br />&nbsp;&nbsp;function(msg, rinfo) {<br />&nbsp;&nbsp;&nbsp;&nbsp;// ...
				});</code>

		x-card.opaque
			div
				h1 Por ejemplo
				p <code>/quneo/pads/2/drum/pressure</code>
				p <code>0.7</code>

		x-card.opaque
			div
				h1 Controlar LEDs
				p <code>oscClient.send(address, value)</code>

		x-card.opaque
			div 
				h1 Por ejemplo
				p <code>oscClient.send(<br/>&nbsp;'/quneo/leds/pads/8/NW/red',<br/>&nbsp;0.5<br/>)</code>	



		x-card.opaque
			h1 Servidor &rarr; navegador

		x-card.opaque
			div
				h1 Socket.IO
				p 
					em ¡por supuesto!

		x-card.opaque
			div
				h1 Suscribirnos a mensajes
				p <code>/quneo/pads/2/drum/pressure</code>
				p <code>/quneo/pads/(\\d+)/drum/pressure</code>
				

		x-card.opaque
			div
				h1 Enviar mensajes
				p <code>/quneo/leds/pads/1/*/red</code>



		x-card.opaque
			h1 Audio gear

		x-card.opaque
			div
				h1 Modular,<br />filosofía Web Audio
				p Entradas y salidas
				p Composición: bloques dentro de bloques

		x-card.opaque
			img(src="img/modular-routing2.png")

		x-card.opaque.cover(data-background="img/modular.jpg")

		x-card.opaque.cover(data-background="img/modularkid.jpg")
		
		x-card.opaque.cover(data-background="img/modularcat.jpg")
		
		x-card.opaque.cover(data-background="img/cat_synth.jpg")




		x-card.opaque
			h1 Web Audio es una API muy sencilla ===
	
		x-card.opaque
			h1 ... hay que programar muchos helpers

		x-card.opaque
			h1 Fácil, porque es modular

		x-card.opaque
			div
				h1 Ejemplo: OscillatorNode
				p De un solo uso

		x-card.opaque
			div
				h1 Solución: OscillatorVoice
				p Encapsula OscillatorNode
				p Si se usa, lo regenera

		x-card.opaque
			div
				h1 Ejemplo: control de parámetros
				p <code>setValueAtTime</code>
				p <code>setLinearValueAtTime</code>
				p etc...

		x-card.opaque
			img(src="img/adsr.png")

		x-card.opaque
			div
				h1 Tedioso hacer sequencias
				p Ejemplo: empezar en 0, subir a 0.8, bajar a 0

		x-card.opaque
			div
				h1 Solución: ADSREnvelope
				p Programa los eventos en el orden correcto
				p Usa <code>setValueAtTime</code>, etc


		x-card.opaque
			h1 Ejemplo: no hay generador de ruido

		x-card.opaque
			div
				h1 Solución: ScriptProcessor
				p ¡Procesar audio en JavaScript!

		x-card.opaque
			div
				h1 Ejemplos de ScriptProcessor
				p - generar ruido
				p - mezclar señales "creativamente"
				p - ¡sintes completos!

		x-card.opaque
			h1 ¿Audio GUI?

		x-card.opaque
			h1 Basada en Web Components<br />(via x-tag)

		x-card.opaque
			h1 <code>attachTo</code> una instancia de audio gear

		x-card.opaque
			div
				h1 Basado en eventos



		x-card.opaque
			div
				h1 Bajotron
				p Monophonic multivoice unisonic bass line

		x-card.opaque
			div
				h1 Colchonator
				p Construir colchones con Bajotrones

		x-card.opaque
			div
				h1 Porrompom
				p Simple sample based drum machine

		x-card.opaque
			div
				h1 Reverbetron
				p Módulo de reverberación basado en impulsos
		

		
		x-card
			h1 Video gear

		x-card
			h1 WebGL via three.js

		x-card
			div
				h1 Composite rendering
				p Un renderer, muchas escenas

		x-card
			div
				h1 Escenas procedurales
				p Porque no soy una artista 3D
		



		x-card
			div
				h1 El "truco"
				div para componer escenas con three.js

		x-card
			div
				h1 Configuración
				p <code>renderer = new THREE.WebGLRenderer({<br/>&nbsp;&nbsp;preserveDrawingBuffer: true<br />});</code>
				p <code>renderer.autoClear = false;</code>
			
		x-card
			div
				h1 Y al renderizar...
				p <code>renderer.clear()</code> una vez
				p repetir <code>renderer.render(scene, camera)</code> por escena
		
		x-card
			h1 Y ya.
		
	

		x-card
			h1 Tocar en vivo

		x-card
			h1 Base en Renoise

		x-card.light.cover(data-background="img/renoise.png")
			h1 Es un tracker

		x-card
			h1 ¿Editor web?



		x-card
			div
				h1 Formato de canciones en Renoise
				p Basado en XML

		x-card
			h1 Exportar a JSON

		x-card
			div
				h1 Conceptos tracker
				p Patrones, canales, filas
				p "Como Excel, pero divertido"
	
		x-card.light.cover(data-background="img/renoise.png")

		x-card
			div
				h1 Más la order list
				p Lista de patrones y el orden en que serán reproducidos
	
		x-card.light.cover(data-background="img/renoise.png")


		x-card
			h1 Construimos una lista de eventos

		x-card
			div
				h1 Por ejemplo
				p <code>{<br />type: NOTE_ON, note_number: 40,<br />timestamp: 0.00032,<br />order: 1, pattern: 3, row: 4<br />instrument: 3, volume: 0.5<br />}</code>

		x-card
			div
				h1 Valores extra
				p para sincronizar los visuales

		x-card
			h1 Ordenar por timestamp




		x-card
			div
				h1 Máxima precisión
				p para eventos de audio

		x-card
			div
				h1 Pero no se pueden cancelar
				p Imposible programar una canción entera y cambiar de opinión después

		x-card
			div
				h1 requestAuditionFrame
				p Lanzar ráfagas de eventos periódicamente
				p Lo que quepa en el buffer de audio

		x-card
			div
				h1 Puede sonar un poco "raro"
				p Es lo que hay



		x-card
			h1 Explotemos las notas


		x-card
			div
				h1 Formato inicial
				p Nota-Octava
				p Ej: <code>C-4</code> = DO, cuarta octava

		x-card
			div
				h1 Convertir en notas MIDI
				p Ej: <code>C-4</code> es <code>40</code>

		x-card
			div
				h1 Entonces podemos...
				p Transponer notas
				p Construir arpeggios o acordes
				p Usarlos visualmente

		x-card
			div
				h1 Ej: Transponer notas
				p En la escala cromática,
				p una octava tiene 12 notas
				p <code>C-4</code> = <code>40</code> = DO, cuarta octava
				p <code>C-5</code> = <code>52</code> = DO, quinta octava


		x-card
			div
				h1 Ej: Acordes
				p Tocar varias notas a la vez
				p siguiendo cierto criterio

		x-card
			div
				h1 Ej: Acorde mayor
				p Tocar nota base, base + 4, base + 7
				p <code>DO mayor</code> = 40, 44, 47
				p C-4, E-4, G-4
				p DO, MI, SOL

		x-card
			h1 ¿Pero por qué molestarse, si existe Dancer.js?

		x-card
			div
				h1 Las notas son más precisas que la FFT
				p Una FFT no distingue instrumentos en la misma banda de frecuencia

		x-card
			div
				h1 Reaccionar a eventos <em>muy</em> específicos
				p Ej: cuando suene el bombo,
				p pero <strong>no</strong> cuando suene el bajo

		x-card
			div
				h1 De la otra manera,
				p trata con umbrales,
				p tiempos de ataque,
				p y decremento<sup>*</sup>.
				p <small>*(esto no es un haiku)</small>



		x-card
			h1 Ojo

		x-card
			div
				h1 Cuidadito con saturar
				p Normalmente horrible&mdash;a menos que te vaya la noise music

		x-card
			div
				h1 Limitar y comprimir
				p <code>AudioGain</code> y <code>DynamicCompressor</code> serán tus amigos

		x-card
			div
				h1 Tecnología en desarrollo
				p Puede petar, devorar memoria, cambiar sin avisar o explotarte en las narices



		x-card
			h1 Pero eso es parte de la diversión

		x-card
			h1 ¿No?

		x-card
			h1 ¿Vemos a ver si se rompe?

		x-card
			h1 Recordad lo de "brace, brace"
				



		x-card
			h1 ▶

		x-card
			div
				h1 supersole.net
				p ¡Bajaros toda mi música!

		x-card
			div
				h1 supersole.net
				p "Like dancing on discos with cheese on toast"

		x-card
			div
				h1 supersole.net
				p <em>Así</em> de horterilla


		

		x-card
			h1 ¿Se ha roto ya?

		x-card
			h1 ¿No?

		x-card
			h1 Parece que no.

		x-card
			h1 BIEN

		

		x-card
			div
				h1 @supersole
				p En twitter

		x-card
			h1 @supersole

		x-card
			h1 @supersole
				

		x-card
			h1 @supersole



		x-card
			h1 ¡Gracias!

		x-card
			h1 Sois...

		x-card
			h1 Sois súper...

		x-card
			h1 Sois súper guays



	

	#transport.hidden
		button#frew ❚◀◀
		button#rew ◀◀
		button#play ▶
		button#pause ❚❚
		button#fwd ▶▶
		button#ffwd ▶▶❚
		#time 
		#order
	
	#gui.hidden

	#twitter.hidden


	script(src='/socket.io/socket.io.js', type='text/javascript')
	script(src='/js/libs/x-tag/core.js', type='text/javascript')
	script(src='/js/libs/x-tag/deck.js', type='text/javascript')
	script(src='/js/libs/x-tag/flipbox.js', type='text/javascript')
	script(src='/js/libs/zepto.js', type='text/javascript')
	script(src='/js/libs/AudioContextMonkeyPatch.js', type='text/javascript')
	script(src='/js/libs/three.min.js', type='text/javascript')
	script(src='/build/bundle.js', type='text/javascript')

